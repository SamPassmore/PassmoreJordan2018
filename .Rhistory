cumsum()
idx = results$Present / sum(results$Absent, results$Present)
idx = (results$Present / sum(results$Absent, results$Present)) > 0.1
results = results[idx,]
signal_files = list.files('results/signal-results/',
pattern = "mean.csv",
full.names = TRUE)
idx = !str_detect(signal_files, "ie") # leave IE for now
signal_files = signal_files[idx]
results_lang = map(signal_files, read.csv)
results = do.call(rbind, results_lang)
# make the names nice
results$X = str_remove(results$X, "name")
caption = "Signal tests for each terminology within each langauge family. Columns 2 & 3 indicate the presence and absence of a terminology. Columns 4 to 6 are outputs from the D-statistic test. Columns 7 to 21 are output from Mantel tests."
c.names = c("Terminology", "Absent", "Present", "D", "Prob. Brownian", "Prob. Random", "Z-stat", "p-value","corrected-p", "Z-stat", "p-value", "corrected-p", "Z-stat", "p-value", "corrected-p", "Statistic", "p-value", "corrected-p", "Statistic", "p-value", "corrected-p")
results = results[,c(1:12,16:18,13:15,19:21)]
groups = sapply(results_lang, nrow) %>%
cumsum()
idx = (results$Present / sum(results$Absent, results$Present)) > 0.1
results = results[idx,]
print(
results %>%
kable(format = 'html', col.names = linebreak(c.names),
caption = caption, digits = 3) %>%
kable_styling(bootstrap_options =
c("striped", "bordered")) %>%
group_rows("Austronesian", 1, groups[1]) %>%
group_rows("Bantu", groups[1]+1, groups[2]) %>%
group_rows("Uto-Aztecan", groups[2]+1, groups[3]) %>%
add_header_above(c(" " = 3, "D-statistic" = 3,
"Geography" = 3, "Log-Geography" = 3,
"Phylogeny" = 3, "Log-Geo + Phy" = 3,
"Phy + Log Geo" = 3)) %>%
add_header_above(c(" " = 6, "Mantel" = 9,
"Partial Mantel" = 6)))
results
idx = (results$Present / sum(results$Absent, results$Present)) > 0.1
idx
signal_files = list.files('results/signal-results/',
pattern = "mean.csv",
full.names = TRUE)
idx = !str_detect(signal_files, "ie") # leave IE for now
signal_files = signal_files[idx]
results_lang = map(signal_files, read.csv)
results = do.call(rbind, results_lang)
# make the names nice
results$X = str_remove(results$X, "name")
caption = "Signal tests for each terminology within each langauge family. Columns 2 & 3 indicate the presence and absence of a terminology. Columns 4 to 6 are outputs from the D-statistic test. Columns 7 to 21 are output from Mantel tests."
c.names = c("Terminology", "Absent", "Present", "D", "Prob. Brownian", "Prob. Random", "Z-stat", "p-value","corrected-p", "Z-stat", "p-value", "corrected-p", "Z-stat", "p-value", "corrected-p", "Statistic", "p-value", "corrected-p", "Statistic", "p-value", "corrected-p")
results = results[,c(1:12,16:18,13:15,19:21)]
groups = sapply(results_lang, nrow) %>%
cumsum()
idx = (results$Present / sum(results$Absent, results$Present)) > 0.1
idx
(results$Present / sum(results$Absent, results$Present))
results$Present
sum(results$Absent, results$Present)
rowSums(results$Absent, results$Present)
(results$Present / rowSums(results[,c("Absent", "Present")])
)
idx = results$Present / rowSums(results[,c("Absent", "Present")]) > 0.1
results = results[idx,]
results
groups = sapply(results_lang, nrow) %>%
cumsum()
groups
# get three runs of BayesTraits logs
files_1 = list.files('results/co-evolutionary/run-1/', full.names = TRUE,
pattern = "*.Log.txt")
files_2 = list.files('results/co-evolutionary/run-2/', full.names = TRUE,
pattern = "*.Log.txt")
files_3 = list.files('results/co-evolutionary/run-3/', full.names = TRUE,
pattern = "*.Log.txt")
# Get the corresponding runs of BayesTraits Stones
stones_1 = list.files('results/co-evolutionary/run-1/', full.names = TRUE,
pattern = "*.Stones.txt")
stones_2 = list.files('results/co-evolutionary/run-2/', full.names = TRUE,
pattern = "*Stones.txt")
stones_3 = list.files('results/co-evolutionary/run-3/', full.names = TRUE,
pattern = "*.Stones.txt")
i = 8
hypotheses = m$job[i] %>%
as.character()
hypotheses
hypotheses = m$job[i] %>%
as.character()
# find the right files
# This is ithe dependent and independent models for each hypotheses
idx = str_detect(files_1, hypotheses)
f1 = files_1[idx]
idx = str_detect(files_2, hypotheses)
f2 = files_2[idx]
idx = str_detect(files_3, hypotheses)
f3 = files_3[idx]
# load the files
logs = map(list(f1,f2,f3),
function(f) map(f, read.bayestraits))
map(logs, length)
dep1 = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-absenceofcousinmarriage.permitted-dep1.Log.txt')
dep2 = read.bayestraits('results/co-evolutionary/run-2/austronesian-eskimo-absenceofcousinmarriage.permitted-dep2.Log.txt')
dep3 = read.bayestraits('results/co-evolutionary/run-3/austronesian-eskimo-absenceofcousinmarriage.permitted-dep3.Log.txt')
plot(dep1$Lh, type = 'l')
lines(dep2$Lh, col = "red")
lines(dep3$Lh, col = "blue")
dep1 = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-absenceofcousinmarriage.preference-dep1.Log.txt')
dep2 = read.bayestraits('results/co-evolutionary/run-2/austronesian-eskimo-absenceofcousinmarriage.preference-dep2.Log.txt')
dep3 = read.bayestraits('results/co-evolutionary/run-3/austronesian-eskimo-absenceofcousinmarriage.preference-dep3.Log.txt')
plot(dep1$Lh, type = 'l')
lines(dep2$Lh, col = "red")
lines(dep3$Lh, col = "blue")
dep_logs = list(dep1, dep2, dep3)
dmcmc = mcmc.list(map(dep_logs, function(x) as.mcmc(x$Lh)))
d1 = gelman.diag(dmcmc)
d1
indep1 = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-absenceofcousinmarriage.preference-indep1.Log.txt')
indep2 = read.bayestraits('results/co-evolutionary/run-2/austronesian-eskimo-absenceofcousinmarriage.preference-indep2.Log.txt')
indep3 = read.bayestraits('results/co-evolutionary/run-3/austronesian-eskimo-absenceofcousinmarriage.preference-indep3.Log.txt')
plot(indep$Lh, type = 'l')
lines(indep2$Lh, col = "red")
lines(indep3$Lh, col = "blue")
indep1 = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-absenceofcousinmarriage.preference-indep1.Log.txt')
indep2 = read.bayestraits('results/co-evolutionary/run-2/austronesian-eskimo-absenceofcousinmarriage.preference-indep2.Log.txt')
indep3 = read.bayestraits('results/co-evolutionary/run-3/austronesian-eskimo-absenceofcousinmarriage.preference-indep3.Log.txt')
plot(indep1$Lh, type = 'l')
lines(indep2$Lh, col = "red")
lines(indep3$Lh, col = "blue")
indep_logs = list(indep1, indep2, indep3)
dmcmc = mcmc.list(map(indep_logs, function(x) as.mcmc(x$Lh)))
d1 = gelman.diag(dmcmc)
d1
lh = lh_table[4,]
bf = outer(lh, lh, function(x,y) 2 * (x - y))
bf = bf["Iroquois",]
bf
bf = data.frame(terminology = colnames(bf) , bf = ["Iroquois",])
colnames(bf) = c("terminology", "Bayes' Factor")
bf = outer(lh, lh, function(x,y) 2 * (x - y))
bf = data.frame(terminology = colnames(bf) , bf = ["Iroquois",])
colnames(bf) = c("terminology", "Bayes' Factor")
bf = outer(lh, lh, function(x,y) 2 * (x - y))
colnames(bf)
bf = data.frame(terminology = colnames(bf) , bf = bf["Iroquois",])
colnames(bf) = c("terminology", "Bayes' Factor")
bf
options(scipen=999)
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(kableExtra)
library(stringr)
library(dplyr)
library(coda)
library(purrr)
library(excdr)
library(psych)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(reshape2)
source('processing/helper.R')
kincodes = read.csv('data/kincodes', header = FALSE)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-matrilineal-indep1.Log.txt')
plot.mcmcchain(indep)
plot.mcmcchain = function(log, main = ""){
#log$group = ifelse(log$Lh > group, 1, 2)
p1 = ggplot(log, aes(x = Iteration, y = Lh)) +
geom_line() + ggtitle(main)
p1b = ggplot(log, aes(x = Lh)) +
geom_histogram() + ggtitle('Likelihood histogram')
# root_cols = str_detect(colnames(log), "^Root|group")
# roots = melt(log[,root_cols], id.vars = "group")
#
# p3 = ggplot(roots, aes(y = value, x = variable)) +
#   geom_boxplot() + ggtitle('Root Prob.')
grid.arrange(p1, p1b, ncol = 1)
}
plot.mcmcchain(indep)
idx = indep$Lh > -61
above = indep[idx,]
below = indep[!idx,]
colMeans(above[,11:14])
colMeans(below[,11:14])
colMeans(above[,9:10])
colMeans(below[,9:10])
colnames(above)
colMeans(above[,7:10])
colMeans(below[,7:10])
rbind(
colMeans(above[,11:14]),
colMeans(below[,11:14]),
colMeans(above[,7:10]),
colMeans(below[,7:10])
)
rbind(
colMeans(above[,7:10]),
colMeans(below[,7:10])
)
dep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-matrilineal-dep1.Log.txt')
plot.mcmcchain(dep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-matrilineal-indep1.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-matrilineal-indep1.Log.txt')
plot.mcmcchain(indep)
idx = indep$Lh > -61
above = indep[idx,]
below = indep[!idx,]
rbind(
colMeans(above[,11:14]),
colMeans(below[,11:14])
) %>%
kable(format = 'html', caption = "Ancestral states for model 1 and model 2", digits = 3) %>%
kable_styling()
rbind(
colMeans(above[,7:10]),
colMeans(below[,7:10])
) %>% kable(format = 'html', caption = "Independent rates for model 1 and model 2", digits = 3) %>%
kable_styling()
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-matrilineal-indep1.Log.txt')
plot.mcmcchain(indep)
idx = indep$Lh > -61
above = indep[idx,]
below = indep[!idx,]
rbind(
colMeans(above[,11:14]),
colMeans(below[,11:14])
) %>%
kable(format = 'html', caption = "Ancestral states for model 1 and model 2", digits = 3, row.names = c("model 1", "model 2")) %>%
kable_styling()
rownames(as) = c("model 1", "model 2")
as %>%
kable(format = 'html', caption = "Ancestral states for model 1 and model 2", digits = 3) %>%
kable_styling()
as = rbind(colMeans(above[,11:14]), colMeans(below[,11:14]))
rownames(as) = c("model 1", "model 2")
as %>%
kable(format = 'html', caption = "Ancestral states for model 1 and model 2", digits = 3) %>%
kable_styling()
rates
rates = rbind(colMeans(above[,7:10]), colMeans(below[,7:10]))
rownames(rates) = c("model 1", "model 2")
rates
rates %>%
kable(format = 'html', caption = "Independent rates for model 1 and model 2", digits = 3) %>%
kable_styling()
9.86 * 10000
9.86 * 1000
9.86 * 100
7.984 * 100
dep = read.stones('results/co-evolutionary/run-1/austronesian-crow-matrilineal-dep1.Stones.txt')
dep
indep = read.stones('results/co-evolutionary/run-1/austronesian-crow-matrilineal-indep1.Stones.txt')
indep
options(scipen=999)
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(kableExtra)
library(stringr)
library(dplyr)
library(coda)
library(purrr)
library(excdr)
library(psych)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(reshape2)
source('processing/helper.R')
kincodes = read.csv('data/kincodes', header = FALSE)
dep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-polygyny-indep2.Log.txt')
plot.mcmcchain(dep)
dep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-polygyny-indep2.Log.txt')
dep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-polygyny-dep1.Log.txt')
plot.mcmcchain(dep)
dep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-polygyny-indep1.Log.txt')
plot.mcmcchain(dep)
read.stones('results/co-evolutionary/run-1/austronesian-crow-high.polygyny-dep1.Log.txt')
read.stones('results/co-evolutionary/run-1/austronesian-crow-high.polygyny-dep1.Stones.txt')
plot.mcmcchain(dep)
dep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-polygyny-indep2.Log.txt')
plot.mcmcchain(dep)
dep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-polygyny-indep3.Log.txt')
plot.mcmcchain(dep)
dep = read.bayestraits('../terminology-coevolution2/results-archive/21_05_2018-13-12/austronesian-crow-polygyny-dep.Log.txt')
plot.mcmcchain(dep)
dep = read.bayestraits('../terminology-coevolution2/results-archive/21_05_2018-13-12/austronesian-crow-polygyny-indep.Log.txt')
plot.mcmcchain(dep)
indep = read.bayestraits('../terminology-coevolution2/results-archive/21_05_2018-13-12/austronesian-crow-matri.anvunclocalresidence-indep.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('../terminology-coevolution2/results-archive/21_05_2018-13-12/austronesian-crow-matrilineal-indep.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-matri.anvunclocalresidence-indep1.Log.txt')
plot.mcmcchain(indep)
stone = read.stones('results/co-evolutionary/run-1/austronesian-crow-matri.anvunclocalresidence-indep1.Stones.txt')
stone
as = rbind(colMeans(above[,11:14]), colMeans(below[,11:14]))
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-matri.anvunclocalresidence-indep1.Log.txt')
plot.mcmcchain(indep)
plot.mcmcchain(indep)
stone = read.stones('results/co-evolutionary/run-1/austronesian-crow-matri.anvunclocalresidence-indep1.Stones.txt')
idx = indep$Lh > -75
above = indep[idx,]
below = indep[!idx,]
as = rbind(colMeans(above[,11:14]), colMeans(below[,11:14]))
rownames(as) = c("model 1", "model 2")
as %>%
kable(format = 'html', caption = "Ancestral states for model 1 and model 2", digits = 3) %>%
kable_styling()
rates = rbind(colMeans(above[,7:10]), colMeans(below[,7:10]))
rownames(rates) = c("model 1", "model 2")
rates %>%
kable(format = 'html', caption = "Independent rates for model 1 and model 2", digits = 3) %>%
kable_styling()
20 * 10000
20 * 10
stone = read.stones('results/co-evolutionary/run-1/austronesian-crow-matri.anvunclocalresidence-indep1.Stones.txt')
stone
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-matri.anvunclocalresidence-indep1.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-absenceofcousinmarriage.preference-indep.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-absenceofcousinmarriage.preference-indep.Log.txt')
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-absenceofcousinmarriage.preference-indep1.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-absenceofcousinmarriage.preference-dep1.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-monogamy-indep1.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('../terminology-coevolution2/results-archive/21_05_2018-13-12/austronesian-eskimo-monogamy-indep.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-monogamy-indep1.Log.txt')
plot.mcmcchain(indep)
indep = read.stones('results/co-evolutionary/run-1/austronesian-crow-matrilineal-indep1.Stones.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-monogamy-indep1.Log.txt')
plot.mcmcchain(indep)
idx = indep$Lh > -70
above = indep[idx,]
below = indep[!idx,]
as = rbind(colMeans(above[,11:14]), colMeans(below[,11:14]))
rownames(as) = c("model 1", "model 2")
as %>%
kable(format = 'html', caption = "Ancestral states for model 1 and model 2", digits = 3) %>%
kable_styling()
rates = rbind(colMeans(above[,7:10]), colMeans(below[,7:10]))
rownames(rates) = c("model 1", "model 2")
rates %>%
kable(format = 'html', caption = "Independent rates for model 1 and model 2", digits = 3) %>%
kable_styling()
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-eskimo-monogamy-indep1.Log.txt')
plot.mcmcchain(indep)
stones = read.stones('results/co-evolutionary/run-1/austronesian-crow-matrilineal-indep1.Stones.txt')
stones
idx = indep$Lh > -70
above = indep[idx,]
below = indep[!idx,]
as = rbind(colMeans(above[,11:14]), colMeans(below[,11:14]))
rownames(as) = c("model 1", "model 2")
as %>%
kable(format = 'html', caption = "Ancestral states for model 1 and model 2", digits = 3) %>%
kable_styling()
rates = rbind(colMeans(above[,7:10]), colMeans(below[,7:10]))
rownames(rates) = c("model 1", "model 2")
rates %>%
kable(format = 'html', caption = "Independent rates for model 1 and model 2", digits = 3) %>%
kable_styling()
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-3/austronesian-eskimo-neo.localresidence-indep.Log.txt')
indep = read.bayestraits('results/co-evolutionary/run-3/austronesian-eskimo-neo.localresidence-indep3.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-3/austronesian-eskimo-neo.localresidence-indep1.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-3/austronesian-eskimo-neo.localresidence-dep1.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/bantu-crow-matrilineal-indep.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/bantu-crow-matrilineal-indep1.Log.txt')
plot.mcmcchain(indep)
indep = read.bayestraits('results/co-evolutionary/run-1/bantu-crow-matrilineal-dep1.Log.txt')
indep = read.bayestraits('results/co-evolutionary/run-1/bantu-crow-matrilineal-dep1.Log.txt')
plot.mcmcchain(indep)
dep = read.bayestraits('../terminology-coevolution2/output/austronesian-crow-polygyny-dep1.Log.txt')
plot.mcmcchain(dep)
indep = read.bayestraits('results/co-evolutionary/run-1/austronesian-crow-matrilineal-indep1.Log.txt')
plot.mcmcchain(indep)
plot.mcmcchain(indep)
dep = read.stones('results/co-evolutionary/run-1/austronesian-crow-matrilineal-dep1.Stones.txt')
dep = read.stones('results/co-evolutionary/run-1/austronesian-crow-matrilineal-dep1.Stones.txt')
indep = read.stones('results/co-evolutionary/run-1/austronesian-crow-matrilineal-indep1.Stones.txt')
idx = indep$Lh > -61
ua = read.nexus('data/anc-state/utoaztecan.bttrees')
library(ape)
ua = read.nexus(file.choose())
ua
length(ua$tip.label)
options(scipen=999)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warnings = FALSE)
library(knitr)
library(kableExtra)
library(stringr)
library(dplyr)
library(coda)
library(purrr)
library(excdr)
library(psych)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(reshape2)
source('processing/helper.R')
kincodes = read.csv('data/kincodes', header = FALSE)
dep = read.bayestraits('../terminology-coevolution2/results-archive/21_05_2018-13-12/austronesian-crow-polygyny-indep.Log.txt')
dep = read.bayestraits('../terminology-coevolution2/output/austronesian-crow-polygyny-dep1.Log.txt')
plot.mcmcchain(dep)
d = suppressWarnings(purrr::map(files, read.table))
files = list.files('data/anc-state', pattern = '*.btdata',
full.names = TRUE)
d = suppressWarnings(purrr::map(files, read.table))
files = list.files('data/anc-state', pattern = '*.btdata',
full.names = TRUE)
d = suppressWarnings(purrr::map(files, read.table))
t = lapply(d, nrow) %>%
unlist() %>%
matrix(., ncol = 1)
dimnames(t) = list(c("Austronesian", "Bantu", "Indo-European", "Uto-Aztecan"), "Count")
kable(t,
caption = "Table S1: Count of societies in signal test and ancestral state analyses, by language family",
format = 'html') %>%
kable_styling()
# summary info
summary = readxl::read_xlsx('../terminology-coevolution2/summary-results.xlsx', sheet = "all")
# data count info
files = list.files('data/co-evo/', pattern = "*.btdata", full.names = TRUE)
d = purrr::map(files, read.table)
t = lapply(d, nrow) %>%
unlist() %>%
data.frame(count = .)
t$id = basename(files) %>%
tools::file_path_sans_ext(.)
t$id2 = str_remove(t$id, "(austronesian|bantu|uto)-")
t$lf = str_extract(t$id, "(austronesian|bantu|uto)")
t2 = dcast(t, id2~lf, value.var = "count")
t2 = apply(t2, 2, function(x) ifelse(is.na(x), "", x)) %>%
data.frame()
summary = left_join(summary, t2, by = "id2")
summary = suppressWarnings(left_join(summary, t2, by = "id2"))
options(scipen=999)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warnings = FALSE)
library(knitr)
library(kableExtra)
library(stringr)
library(dplyr)
library(coda)
library(purrr)
library(excdr)
library(psych)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(reshape2)
source('processing/helper.R')
kincodes = read.csv('data/kincodes', header = FALSE)
logs = read.bayestraits('results/anc-state/guillon-mace-replication/output/18-Dec-2017-12_08.Log.txt')
plot(logs$Lh)
colnames(logs)
anc_cols = str_detect(colnames(logs), "Root (")
anc_cols = str_detect(colnames(logs), "Root \\(")
colMeans(logs[,anc_cols])
anc_cols = str_detect(colnames(logs), "Root \\(")
anc_cols
anc_cols = str_detect(colnames(logs), "Root \(")
anc_cols = str_detect(colnames(logs), "Root")
colMeans(logs[,anc_cols])
kincodes
str_extract(names(anc_states), "[0-9]")
anc_states = colMeans(logs[,anc_cols])
str_extract(names(anc_states), "[0-9]")
# get the kincode numbers out
kin_numbers = str_extract(names(anc_states), "[0-9]") %>%
as.numeric()
kin_numbers
kincodes[kin_numbers,2]
kincodes
names(anc_states) = kincodes[kin_numbers,2]
print(
anc_states %>%
kable(format = 'html',
caption =
"Ancestral state of Bantu with missing data included",
digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "bordered"))
)
print(
anc_states %>%
kable(format = 'html',
caption =
"Ancestral state of Bantu with missing data included",
digits = 3, col.names = c("terminology", "probability")) %>%
kable_styling(bootstrap_options = c("striped", "bordered"))
)
print(
anc_states %>%
kable(format = 'html',
caption =
"Ancestral state of Bantu with missing data included",
digits = 3, col.names = c("probability")) %>%
kable_styling(bootstrap_options = c("striped", "bordered"))
)
152.25*2
10.50 * 4
7.26/7.36
.1 * 7.36
.1 / 7.36
.5 / 7.36
